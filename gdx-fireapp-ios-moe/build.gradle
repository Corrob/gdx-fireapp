apply plugin: "java"
apply plugin: "moe"
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    exclude 'com/google/**'
    classifier "sources"
}

jar {
    from sourceSets.main.output
    exclude 'com/google/**'

    from sourceSets.main.allJava
    exclude 'com/google/**'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets.main.java.srcDirs = ["src/"]
sourceSets.test.java.srcDirs = ["tests/"]

dependencies {
    compile project(":gdx-fireapp-core")
    compile libs.libgdx.iosmoe
    testCompile libs.junit
    testCompile libs.mockito
}

eclipse.project {
    name = "gdx-fireapp-io-smoe"
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

ext{
    appModuleName = 'GDX Fireapp iOS-moe'
}


apply from: "" + project.rootDir + "/gradle/javadoc.gradle"
apply from: "" + project.rootDir + "/gradle/pom.gradle"

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            version = rootProject.version
            artifactId ='gdx-fireapp-ios-moe'
            artifact jar
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', libraryDescription)
                root.appendNode('name', libraryName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}